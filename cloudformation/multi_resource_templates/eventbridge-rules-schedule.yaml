Parameters:
  State:
    Default: "DISABLED"
    Description: Default State when EventBridge Rule is created
    Type: String
    ConstraintDescription: State must have values either 'ENABLED' or 'DISABLED'
    AllowedValues:
      - "ENABLED"
      - "DISABLED"
  CronScheduleOn:
    Default: "cron(00 17 * 5 ? 2022)"
    Description: s3 path to glue script
    Type: String
  CronScheduleOff:
    Default: "cron(00 19 * 5 ? 2022)"
    Description: s3 path to glue script
    Type: String
Resources:
  ScheduleRDSResourceOn:
    Type: 'AWS::Events::Rule'
    DeletionPolicy: "Retain"
    Properties:
      Name: ScheduleResourceOn
      Description: Schedules Turning ON RDS DB
      EventBusName: !Ref ScheduleEventBus
      State: !Ref State
      ScheduleExpression: !Ref CronScheduleOn
      Targets:
        - Arn: !GetAtt
            - LambdaRDSOnOff
            - Arn
          Id: 'LambdaRDSOn'
          RoleArn: !GetAtt
            - EventBridgeIAMrole
            - Arn
    DependsOn:
      - "LambdaRDSOnOff"
  ScheduleRDSResourceOff:
    Type: 'AWS::Events::Rule'
    DeletionPolicy: "Retain"
    Properties:
      Name: ScheduleResourceOff
      Description: Schedules Turning Off RDS DB
      EventBusName: !Ref ScheduleEventBus
      State: !Ref State
      ScheduleExpression: !Ref CronScheduleOff
      Targets:
        - Arn: !GetAtt
              - LambdaRDSOnOff
              - Arn
          Id: 'LambdaRDSOff'
          RoleArn: !GetAtt
            - EventBridgeIAMrole
            - Arn
    DependsOn:
      - "LambdaRDSOnOff"
  LambdaRDSOnOff:
    Type: 'AWS::Lambda::Function'
    DeletionPolicy: "Retain"
    Properties:
      FunctionName: "rds_on_off"
      Handler: index.lambda_handler
      Role:
        Fn::ImportValue: RDSScheduleArn
      Architectures:
        - x86_64
      Runtime: python3.9
      Timeout: 20
      MemorySize: 256
      Code:
        S3Bucket: lambda-zip-for-cf
        S3Key: rds_on_off.zip
  EventBridgeIAMrole:
    Type: 'AWS::IAM::Role'
    DeletionPolicy: "Retain"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub events.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess"
  RDSrole:
    Type: 'AWS::IAM::Role'
    DeletionPolicy: "Retain"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub rds.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonRDSFullAccess"
        -  "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
  ScheduleEventBus:
    Type: AWS::Events::EventBus
    DeletionPolicy: "Retain"
    Properties:
      Name: "schedule"