{
    "objects": [
        {
            "id": "CreateTable",
            "name": "CreateTable",
            "database": {
                "ref": "RDSPostgres"
            },
            "runsOn": {
                "ref": "EC2Resource"
            },
            "type": "SqlActivity",
            "script": "#{myRDSCreateTableSql}"
        },
        {
            "id": "ShellCommandActivityId_NisXF",
            "name": "CopyDatatoRDS",
            "dependsOn": [
                {
                    "ref": "CopyS3DatatoEC2"
                },
                {
                    "ref": "CreateTable"
                }
            ],
            "scriptUri": "#{myInputS3Loc}/psql-copy-s3-rds.sh",
            "runsOn": {
                "ref": "EC2Resource"
            },
            "scriptArgument": [
                "--red_jdbc=#{myRDSjdbcstring}",
                "--red_usr=#{*myRDSUsername}",
                "--red_pwd=#{*myRDSPassword}",
                "--red_tbl=#{myRDSTableName}"
            ],
            "type": "ShellCommandActivity"
        },
        {
            "id": "EC2Resource",
            "name": "EC2Resource",
            "resourceRole": "ec2-profile",
            "role": "DataPipelineDefaultRole",
            "imageId": "ami-0022f774911c1d690",
            "maximumRetries": "1",
            "securityGroupIds": "sg-0afdf2d5ce4c8ed3e",
            "instanceType": "t1.micro",
            "actionOnTaskFailure": "terminate",
            "keyPair": "aws-eb",
            "type": "Ec2Resource",
            "terminateAfter": "30 Minutes"
        },
        {
            "id": "CopyS3DatatoEC2",
            "name": "CopyS3DatatoEC2",
            "runsOn": {
                "ref": "EC2Resource"
            },
            "type": "ShellCommandActivity",
            "command": "(sudo yum -y update aws-cli) && (aws s3 cp #{myInputS3Loc}/ /home/ec2-user/ --recursive)\n"
        },
        {
          "id" : "RDSPostgres",
            "name": "RDSPostgres",
          "type" : "JdbcDatabase",
          "connectionString" : "#{myRDSjdbcstring}",
          "jdbcDriverClass" : "org.postgresql.Driver",
          "jdbcDriverJarUri" : "s3://datapipeline-us-east-1/us-east-1/software/latest/TaskRunner/Postgres-jdbc.jar",
          "username" : "#{*myRDSUsername}",
          "*password" : "#{*myRDSPassword}"
        },
        {
            "id": "Default",
            "name": "Default",
            "failureAndRerunMode": "CASCADE",
            "resourceRole": "ec2-profile",
            "role": "DataPipelineDefaultRole",
            "pipelineLogUri": "s3://data-pipeline-logs1/logs/",
            "scheduleType": "ONDEMAND"
        }
    ],
     "parameters": [
        {
            "id": "*myRDSPassword",
            "description": "RDS password",
            "type": "String"
        },
        {
            "id": "myInputS3Loc",
            "description": "Input S3 file path",
            "type": "AWS::S3::ObjectKey"
        },
        {
            "id": "*myRDSUsername",
            "description": "RDS username",
            "type": "String"
        },
        {
            "id": "myRDSTableName",
            "helpText": "The name of an existing table or a new table that will be created based on the create table SQL query parameter below.",
            "description": "RDS MySQL table name",
            "type": "String"
        },
        {
            "id": "myRDSjdbcstring",
            "description": "RDS Endpoint",
            "type": "String"
        },
        {
            "id": "myRDSCreateTableSql",
            "watermark": "CREATE TABLE pet IF NOT EXISTS (name VARCHAR(20), owner VARCHAR(20), species VARCHAR(20), gender CHAR(1), birth DATE, death DATE);",
            "helpText": "The idempotent SQL statement to create the RDS MySQL table if it does not already exist.",
            "description": "Create table SQL query",
            "optional": "true",
            "type": "String"
        }
    ],
    "values": {
        "myRDSjdbcstring": "<myRDSjdbcstring>",
        "*myRDSUsername": "<username>",
        "*myRDSPassword": "<password>",
        "myRDSCreateTableSql": "CREATE TABLE IF NOT EXISTS persons (\n  id INTEGER,\n  email VARCHAR(100),\n  billing_state VARCHAR(3),\n  billing_postal INTEGER,\n  billing_address VARCHAR(255),\n  PRIMARY KEY (id)\n);",
        "myInputS3Loc": "s3://s3-eventbridge-batch",
        "myRDSTableName": "persons"
    }
}
